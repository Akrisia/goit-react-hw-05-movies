{"version":3,"file":"static/js/983.c531e491.chunk.js","mappings":"kMACA,EAAyB,iCAAzB,EAAqE,mCAArE,EAAmH,mCAAnH,EAA8J,gCAA9J,EAAsM,gCAAtM,EAAiP,mCAAjP,EAA2R,+BAA3R,EAAoU,mEAApU,EAA8Y,+BAA9Y,EAAob,+BAApb,EAA0d,+B,2DCIpdA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,iCAClBC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,iCAEZ,SAASE,IAAoB,IAAD,YACvC,GAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,GAAWC,EAAAA,EAAAA,MAUjB,OAPAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAYL,GAAQM,MAAK,SAAAC,GACrBR,GAAQ,SAAAD,GAAI,OAAIS,EAASC,WAExBC,OAAM,SAAAC,GAAK,OAAIA,EAAMC,aAC3B,CAACX,KAGA,gCACKF,IACG,iCACA,SAAC,KAAD,CAAMc,GAAE,iBAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAUW,aAAZ,iBAAE,EAAiBC,YAAnB,aAAE,EAAuBZ,gBAAzB,QAAqC,IAAKa,UAAWC,EAA7D,0BAAwEd,QAAxE,IAAwEA,GAAxE,UAAwEA,EAAUW,aAAlF,iBAAwE,EAAiBC,YAAzF,aAAwE,EAAuBG,aAA/F,QAAwG,aACpG,iBAAKF,UAAWC,EAAhB,WACI,gBAAKE,IAAG,UAfH,mCAeG,OAAwBpB,EAAKqB,aAAeC,IAAKtB,EAAKuB,eAAgBN,UAAWC,KACzF,iBAAKD,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,SAAyBlB,EAAKuB,kBAC9B,eAAGN,UAAWC,EAAd,yBAAuD,GAApBlB,EAAKwB,aAAxC,QACA,eAAIP,UAAWC,EAAf,uBACA,cAAGD,UAAWC,EAAd,SAAuBlB,EAAKyB,YAC5B,eAAIR,UAAWC,EAAf,qBACA,cAAGD,UAAWC,EAAd,SAAuBlB,EAAK0B,OAAOC,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAC1C,OAAO,4BAAgBA,EAAhB,MAAWD,eAK9B,iBAAKX,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,qCACA,gBAAID,UAAWC,EAAf,WACI,eAAID,UAAWC,EAAf,UACI,SAAC,KAAD,CAAMJ,GAAE,kBAAaZ,EAAb,SAA4Be,UAAWC,EAA/C,qBAEJ,eAAID,UAAWC,EAAf,UACI,SAAC,KAAD,CAAMJ,GAAE,kBAAaZ,EAAb,YAA+Be,UAAWC,EAAlD,iCAMpB,SAAC,EAAAY,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACvC,EAAD,OAC5B,SAAC,KAAD,CAAOsC,KAAK,UAAUC,SAAS,SAACrC,EAAD,gB,6KCtDtCsC,EAAO,SACZC,GACA,OAAOC,IAAAA,IAAUD,ICFnBE,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,WAC3B,OAAOL,EAAA,UAAYG,EAAZ,uCAAmDC,KAGjDE,EAAc,SAACC,GACxB,OAAOP,EAAA,UAAYG,EAAZ,iCAA6CC,EAA7C,kBAA8DG,EAA9D,0BAGEnC,EAAc,SAACL,GACxB,OAAOiC,EAAA,UAAYG,EAAZ,kBAA8BpC,EAA9B,oBAAgDqC,KAG9CI,EAAc,SAACzC,GACxB,OAAOiC,EAAA,UAAYG,EAAZ,kBAA8BpC,EAA9B,4BAAwDqC,KAGtDK,EAAiB,SAAC1C,GAC3B,OAAOiC,EAAA,UAAYG,EAAZ,kBAA8BpC,EAA9B,4BAAwDqC","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx","services/Api.jsx","services/GetFilms.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetailsPage_button__IlAfH\",\"filmCard\":\"MovieDetailsPage_filmCard__TSA3O\",\"filmInfo\":\"MovieDetailsPage_filmInfo__u1grk\",\"image\":\"MovieDetailsPage_image__bfvR6\",\"title\":\"MovieDetailsPage_title__MDJ+L\",\"subtitle\":\"MovieDetailsPage_subtitle__2DZVZ\",\"text\":\"MovieDetailsPage_text__lmKT4\",\"addInfo\":\"MovieDetailsPage_addInfo__JCRNA MovieDetailsPage_filmCard__TSA3O\",\"list\":\"MovieDetailsPage_list__div34\",\"item\":\"MovieDetailsPage_item__NYiJ0\",\"link\":\"MovieDetailsPage_link__ZE1Eo\"};","import s from './MovieDetailsPage.module.css';\nimport { Route, Routes, useParams, useLocation, Link } from 'react-router-dom';\nimport { useState, useEffect, lazy, Suspense } from 'react';\nimport { getFilmById } from 'services/GetFilms';\nimport Loader from 'components/Loader';\nconst Cast = lazy(() => import('../Cast'));\nconst Reviews = lazy(() => import('../Reviews'));\n\nexport default function MovieDetailsPage() {\n    const [film, setFilm] = useState();\n    const { filmId } = useParams();\n    const location = useLocation();\n    const filmImageBaseUrl = 'https://image.tmdb.org/t/p/w500';\n\n    useEffect(() => {\n        getFilmById(filmId).then(response => {\n            setFilm(film => response.data);\n        })\n            .catch(error => error.message);\n    }, [filmId]);\n\n    return (\n        <>\n            {film &&\n                <>\n                <Link to={location?.state?.from?.location ?? '/'} className={s.button}>{location?.state?.from?.label ?? 'Go Back'}</Link>\n                    <div className={s.filmCard}>\n                        <img src={`${filmImageBaseUrl}${film.poster_path}`} alt={film.original_title} className={s.image} />\n                        <div className={s.filmInfo}>\n                            <h2 className={s.title}>{film.original_title}</h2>\n                            <p className={s.text}>User Score: {film.vote_average * 10}%</p>\n                            <h3 className={s.subtitle}>Overview</h3>\n                            <p className={s.text}>{film.overview}</p>\n                            <h3 className={s.subtitle}>Genres</h3>\n                            <p className={s.text}>{film.genres.map(({ id, name }) => {\n                                return <span key={id}>{name} </span>\n                            })}</p>\n                        </div >\n                    </div>\n\n                    <div className={s.addInfo}>\n                        <h3 className={s.subtitle}>Additional Information</h3>\n                        <ul className={s.list}>\n                            <li className={s.item}>\n                                <Link to={`/movies/${filmId}/cast`} className={s.link}>Cast</Link>\n                            </li>\n                            <li className={s.item}>\n                                <Link to={`/movies/${filmId}/reviews`} className={s.link}>Reviews</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </>\n            }\n            <Suspense fallback={<Loader />}>\n                <Routes>\n                    <Route path='cast' element={<Cast />} />\n                    <Route path='reviews' element={<Reviews />} />\n                </Routes>\n            </Suspense>\n        </>\n    );\n};","import axios from \"axios\";\n\nexport const http = {\n    get(url) {\n        return axios.get(url);\n    },\n    post(url, body) {\n        return axios.post(url, body);\n    }\n};","import { http } from \"./Api\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7abb9f029aa2b599dfc2a90359817f58';\n\nexport const getPopularFilms = () => {\n    return http.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const searchFilms = (query) => {\n    return http.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`);\n};\n\nexport const getFilmById = (filmId) => {\n    return http.get(`${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`);\n};\n\nexport const getFilmCast = (filmId) => {\n    return http.get(`${BASE_URL}/movie/${filmId}/credits?api_key=${API_KEY}`);\n}\n\nexport const getFilmReviews = (filmId) => {\n    return http.get(`${BASE_URL}/movie/${filmId}/reviews?api_key=${API_KEY}`);\n}\n"],"names":["Cast","lazy","Reviews","MovieDetailsPage","useState","film","setFilm","filmId","useParams","location","useLocation","useEffect","getFilmById","then","response","data","catch","error","message","to","state","from","className","s","label","src","poster_path","alt","original_title","vote_average","overview","genres","map","id","name","Suspense","fallback","Loader","path","element","http","url","axios","BASE_URL","API_KEY","getPopularFilms","searchFilms","query","getFilmCast","getFilmReviews"],"sourceRoot":""}